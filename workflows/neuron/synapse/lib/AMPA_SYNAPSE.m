function [REAC,SPEC,RATE] = AMPA_SYNAPSE(umod)
%   AMPA_SYNAPSE builder.
%
%   Syntax [REAC,SPEC,RATE] = AMPA_SYNAPSE or UMOD =
%   AMPA_SYNAPSE(UMOD).

%   Taken from 
%   https//senselab.med.yale.edu/modeldb/showModel.cshtml?model=145836&file=/MoradiEtAl2012/SynNMDA10_1.mod#tabs-2

% S. Engblom 2019-11-29 (Revision)

% UNITS {
% 	(nA) = (nanoamp)
% 	(mV) = (millivolt)
% 	(pS) = (picosiemens)
% 	(uS) = (microsiemens)
% 	(umho) = (micromho)
% 	(mM) = (milli/liter)
% 	(uM) = (micro/liter)
% }

RATE = {'R1'     20 ...
        'R2'     1.300 ...
        'R3'     10 ...
        'R4'     2.600 ...
        'R5'     0.900 ...
        'R6'     0.500 ...
        'R7'     10 ...
        'R8'     0.0002 ...
        'R9'     0.002 ...
        'R10'    0.0001 ...
        ...%'Erev'   0 ...
        ...%'g_AMPA' 1 ...
        'T'      'ldata' ... % (note: input via ldata)
       }; 

SPEC = {'C' ...		% closed
        'C1' ...	% closed 1
        'C2' ...	% closed 2
        'O' ...		% open
        'D1' ...	% desensitised 1
        'D2' ...	% desensitised 2 
       };

REAC = {'D2 > R10 * D2 > D1' ...
        'D1 > R9*T * D1 > D2' ...
        'D1 > R8 * D1 > C' ...
        'C > R7*T * C > D1' ...
        'C > R1*T * C > C1' ...
        'C1 > R2 * C1 > C' ...
        'C1 > R3*T * C1 > C2' ...
        'C2 > R4 * C2 > C1' ...
        'C2 > R5 * C2 > O' ...
        'O > R6 * O > C2' ...
       };

if nargin > 0
  if nargout <= 1
    umod = rparse(REAC,SPEC,RATE,'synapse/lib/AMPA_prop.c');
    REAC = umod;    
  else
    error('Unknown syntax.');
  end
end
